##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

module Textgrid
  module REST
    class Trunking
      class V1 < Version
        ##
        # Initialize the V1 version of Trunking
        def initialize(domain)
          super
          @version = 'v1'
          @trunks = nil
        end

        ##
        # @param [String] sid The unique string that we created to identify the Trunk
        #   resource to fetch.
        # @return [Textgrid::REST::Trunking::V1::TrunkContext] if sid was passed.
        # @return [Textgrid::REST::Trunking::V1::TrunkList]
        def trunks(sid=:unset)
          if sid.nil?
              raise ArgumentError, 'sid cannot be nil'
          end
          if sid == :unset
              @trunks ||= TrunkList.new self
          else
              TrunkContext.new(self, sid)
          end
        end

        ##
        # Provide a user friendly representation
        def to_s
          '<Textgrid::REST::Trunking::V1>'
        end
      end
    end
  end
end
